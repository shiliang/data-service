// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v4.25.0--rc2
// source: mira_ida_access_service.proto

// 表示当前 proto 文件属于 protobuf 包，它不是 go 文件的 package
// 主要用于导入外部 proto 文件

package ida

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ContractRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId   string          `protobuf:"bytes,1,opt,name=requestId,proto3" json:"requestId,omitempty"`
	ChainInfoId int32           `protobuf:"varint,2,opt,name=chainInfoId,proto3" json:"chainInfoId,omitempty"` // New identifier for the chain.
	KvPairs     []*KeyValuePair `protobuf:"bytes,3,rep,name=kvPairs,proto3" json:"kvPairs,omitempty"`          // Key-value pairs for the method parameters.
	TxId        *string         `protobuf:"bytes,4,opt,name=txId,proto3,oneof" json:"txId,omitempty"`          // tx id
}

func (x *ContractRequest) Reset() {
	*x = ContractRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mira_ida_access_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContractRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContractRequest) ProtoMessage() {}

func (x *ContractRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mira_ida_access_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContractRequest.ProtoReflect.Descriptor instead.
func (*ContractRequest) Descriptor() ([]byte, []int) {
	return file_mira_ida_access_service_proto_rawDescGZIP(), []int{0}
}

func (x *ContractRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *ContractRequest) GetChainInfoId() int32 {
	if x != nil {
		return x.ChainInfoId
	}
	return 0
}

func (x *ContractRequest) GetKvPairs() []*KeyValuePair {
	if x != nil {
		return x.KvPairs
	}
	return nil
}

func (x *ContractRequest) GetTxId() string {
	if x != nil && x.TxId != nil {
		return *x.TxId
	}
	return ""
}

// Represents a key-value pair for method parameters.
type KeyValuePair struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`     // Key of the parameter.
	Value []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"` // Value of the parameter.
}

func (x *KeyValuePair) Reset() {
	*x = KeyValuePair{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mira_ida_access_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyValuePair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyValuePair) ProtoMessage() {}

func (x *KeyValuePair) ProtoReflect() protoreflect.Message {
	mi := &file_mira_ida_access_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyValuePair.ProtoReflect.Descriptor instead.
func (*KeyValuePair) Descriptor() ([]byte, []int) {
	return file_mira_ida_access_service_proto_rawDescGZIP(), []int{1}
}

func (x *KeyValuePair) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *KeyValuePair) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

// Represents a response from a chain request.
type ContractResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code          int32          `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`                  // Status code of the response.
	Msg           string         `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`                     // Message accompanying the status code.
	ChainDataInfo *ChainDataInfo `protobuf:"bytes,3,opt,name=ChainDataInfo,proto3" json:"ChainDataInfo,omitempty"` // Transaction response containing the result of the operation.
}

func (x *ContractResponse) Reset() {
	*x = ContractResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mira_ida_access_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContractResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContractResponse) ProtoMessage() {}

func (x *ContractResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mira_ida_access_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContractResponse.ProtoReflect.Descriptor instead.
func (*ContractResponse) Descriptor() ([]byte, []int) {
	return file_mira_ida_access_service_proto_rawDescGZIP(), []int{2}
}

func (x *ContractResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ContractResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ContractResponse) GetChainDataInfo() *ChainDataInfo {
	if x != nil {
		return x.ChainDataInfo
	}
	return nil
}

// tx request - tx response, only for RPC response
type ChainDataInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// response code
	// response message
	Result []byte `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	// tx id of request
	TxId string `protobuf:"bytes,2,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	// async tx mode: tx timestamp is zero
	// sync tx mode: tx timestamp is TxRequest.Payload.Timestamp
	TxTimestamp int64 `protobuf:"varint,3,opt,name=tx_timestamp,json=txTimestamp,proto3" json:"tx_timestamp,omitempty"`
	// async tx mode: tx block height is zero
	// sync tx mode: tx block height is the height of block which this tx was packaged
	TxBlockHeight uint64 `protobuf:"varint,4,opt,name=tx_block_height,json=txBlockHeight,proto3" json:"tx_block_height,omitempty"`
}

func (x *ChainDataInfo) Reset() {
	*x = ChainDataInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mira_ida_access_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChainDataInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChainDataInfo) ProtoMessage() {}

func (x *ChainDataInfo) ProtoReflect() protoreflect.Message {
	mi := &file_mira_ida_access_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChainDataInfo.ProtoReflect.Descriptor instead.
func (*ChainDataInfo) Descriptor() ([]byte, []int) {
	return file_mira_ida_access_service_proto_rawDescGZIP(), []int{3}
}

func (x *ChainDataInfo) GetResult() []byte {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *ChainDataInfo) GetTxId() string {
	if x != nil {
		return x.TxId
	}
	return ""
}

func (x *ChainDataInfo) GetTxTimestamp() int64 {
	if x != nil {
		return x.TxTimestamp
	}
	return 0
}

func (x *ChainDataInfo) GetTxBlockHeight() uint64 {
	if x != nil {
		return x.TxBlockHeight
	}
	return 0
}

// 1. 获取包含隐私信息的数据源连接信息接口
type GetPrivateDBConnInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId string `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"` // 请求ID
	DbConnId  int32  `protobuf:"varint,2,opt,name=db_conn_id,json=dbConnId,proto3" json:"db_conn_id,omitempty"` // 数据源连接id
}

func (x *GetPrivateDBConnInfoReq) Reset() {
	*x = GetPrivateDBConnInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mira_ida_access_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPrivateDBConnInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPrivateDBConnInfoReq) ProtoMessage() {}

func (x *GetPrivateDBConnInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_mira_ida_access_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPrivateDBConnInfoReq.ProtoReflect.Descriptor instead.
func (*GetPrivateDBConnInfoReq) Descriptor() ([]byte, []int) {
	return file_mira_ida_access_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetPrivateDBConnInfoReq) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *GetPrivateDBConnInfoReq) GetDbConnId() int32 {
	if x != nil {
		return x.DbConnId
	}
	return 0
}

type GetPrivateDBConnInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32              `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string             `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *PrivateDBConnInfo `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetPrivateDBConnInfoResp) Reset() {
	*x = GetPrivateDBConnInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mira_ida_access_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPrivateDBConnInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPrivateDBConnInfoResp) ProtoMessage() {}

func (x *GetPrivateDBConnInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_mira_ida_access_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPrivateDBConnInfoResp.ProtoReflect.Descriptor instead.
func (*GetPrivateDBConnInfoResp) Descriptor() ([]byte, []int) {
	return file_mira_ida_access_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetPrivateDBConnInfoResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetPrivateDBConnInfoResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetPrivateDBConnInfoResp) GetData() *PrivateDBConnInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type PrivateDBConnInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DbConnId  int32  `protobuf:"varint,1,opt,name=db_conn_id,json=dbConnId,proto3" json:"db_conn_id,omitempty"`  // 数据源连接ID
	ConnName  string `protobuf:"bytes,2,opt,name=conn_name,json=connName,proto3" json:"conn_name,omitempty"`     // 数据源连接名称
	Host      string `protobuf:"bytes,3,opt,name=host,proto3" json:"host,omitempty"`                             // 数据源地址
	Port      int32  `protobuf:"varint,4,opt,name=port,proto3" json:"port,omitempty"`                            // 端口号
	Type      int32  `protobuf:"varint,5,opt,name=type,proto3" json:"type,omitempty"`                            // 数据库类型： 1.mysql，2.Hive
	Username  string `protobuf:"bytes,6,opt,name=username,proto3" json:"username,omitempty"`                     // 数据库用户名
	Password  string `protobuf:"bytes,7,opt,name=password,proto3" json:"password,omitempty"`                     // 数据库密码
	DbName    string `protobuf:"bytes,8,opt,name=db_name,json=dbName,proto3" json:"db_name,omitempty"`           // 数据库名称
	TlsCert   string `protobuf:"bytes,9,opt,name=tls_cert,json=tlsCert,proto3" json:"tls_cert,omitempty"`        // 证书
	CreatedAt string `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"` // 创建时间
}

func (x *PrivateDBConnInfo) Reset() {
	*x = PrivateDBConnInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mira_ida_access_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrivateDBConnInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrivateDBConnInfo) ProtoMessage() {}

func (x *PrivateDBConnInfo) ProtoReflect() protoreflect.Message {
	mi := &file_mira_ida_access_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrivateDBConnInfo.ProtoReflect.Descriptor instead.
func (*PrivateDBConnInfo) Descriptor() ([]byte, []int) {
	return file_mira_ida_access_service_proto_rawDescGZIP(), []int{6}
}

func (x *PrivateDBConnInfo) GetDbConnId() int32 {
	if x != nil {
		return x.DbConnId
	}
	return 0
}

func (x *PrivateDBConnInfo) GetConnName() string {
	if x != nil {
		return x.ConnName
	}
	return ""
}

func (x *PrivateDBConnInfo) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *PrivateDBConnInfo) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *PrivateDBConnInfo) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *PrivateDBConnInfo) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *PrivateDBConnInfo) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *PrivateDBConnInfo) GetDbName() string {
	if x != nil {
		return x.DbName
	}
	return ""
}

func (x *PrivateDBConnInfo) GetTlsCert() string {
	if x != nil {
		return x.TlsCert
	}
	return ""
}

func (x *PrivateDBConnInfo) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

// 4. 通过资产英文名称获取资产详情
type GetPrivateAssetInfoByEnNameReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId   string `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`          // 请求ID
	AssetEnName string `protobuf:"bytes,2,opt,name=asset_en_name,json=assetEnName,proto3" json:"asset_en_name,omitempty"`  // 资产英文名称
	ChainInfoId int32  `protobuf:"varint,3,opt,name=chain_info_id,json=chainInfoId,proto3" json:"chain_info_id,omitempty"` // 链信息id
	PlatformId  int32  `protobuf:"varint,4,opt,name=platform_id,json=platformId,proto3" json:"platform_id,omitempty"`      // 平台id
}

func (x *GetPrivateAssetInfoByEnNameReq) Reset() {
	*x = GetPrivateAssetInfoByEnNameReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mira_ida_access_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPrivateAssetInfoByEnNameReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPrivateAssetInfoByEnNameReq) ProtoMessage() {}

func (x *GetPrivateAssetInfoByEnNameReq) ProtoReflect() protoreflect.Message {
	mi := &file_mira_ida_access_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPrivateAssetInfoByEnNameReq.ProtoReflect.Descriptor instead.
func (*GetPrivateAssetInfoByEnNameReq) Descriptor() ([]byte, []int) {
	return file_mira_ida_access_service_proto_rawDescGZIP(), []int{7}
}

func (x *GetPrivateAssetInfoByEnNameReq) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *GetPrivateAssetInfoByEnNameReq) GetAssetEnName() string {
	if x != nil {
		return x.AssetEnName
	}
	return ""
}

func (x *GetPrivateAssetInfoByEnNameReq) GetChainInfoId() int32 {
	if x != nil {
		return x.ChainInfoId
	}
	return 0
}

func (x *GetPrivateAssetInfoByEnNameReq) GetPlatformId() int32 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

type GetPrivateAssetInfoByEnNameResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string     `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *AssetInfo `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetPrivateAssetInfoByEnNameResp) Reset() {
	*x = GetPrivateAssetInfoByEnNameResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mira_ida_access_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPrivateAssetInfoByEnNameResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPrivateAssetInfoByEnNameResp) ProtoMessage() {}

func (x *GetPrivateAssetInfoByEnNameResp) ProtoReflect() protoreflect.Message {
	mi := &file_mira_ida_access_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPrivateAssetInfoByEnNameResp.ProtoReflect.Descriptor instead.
func (*GetPrivateAssetInfoByEnNameResp) Descriptor() ([]byte, []int) {
	return file_mira_ida_access_service_proto_rawDescGZIP(), []int{8}
}

func (x *GetPrivateAssetInfoByEnNameResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetPrivateAssetInfoByEnNameResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetPrivateAssetInfoByEnNameResp) GetData() *AssetInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

// ///////////////////////////
// ////asset info start //////
// ///////////////////////////
type AssetInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetId           int32                `protobuf:"varint,1,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`                               // 资产编号
	Creator           string               `protobuf:"bytes,2,opt,name=creator,proto3" json:"creator,omitempty"`                                               // 创建者
	CreatorName       string               `protobuf:"bytes,3,opt,name=creatorName,proto3" json:"creatorName,omitempty"`                                       // 创建者名称
	CreatedAt         string               `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`                          // 创建时间
	UpdateUser        string               `protobuf:"bytes,5,opt,name=update_user,json=updateUser,proto3" json:"update_user,omitempty"`                       // 最后修改者
	UpdateName        string               `protobuf:"bytes,6,opt,name=update_name,json=updateName,proto3" json:"update_name,omitempty"`                       // 最后修改者名称
	UpdatedAt         string               `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`                          // 最后修改时间
	Holder            string               `protobuf:"bytes,8,opt,name=holder,proto3" json:"holder,omitempty"`                                                 // 持有者链账户地址
	HolderCompany     string               `protobuf:"bytes,9,opt,name=holder_company,json=holderCompany,proto3" json:"holder_company,omitempty"`              // 持有者公司名称
	HolderCreditCode  string               `protobuf:"bytes,10,opt,name=holder_credit_code,json=holderCreditCode,proto3" json:"holder_credit_code,omitempty"`  // 持有者公司信用代码
	HolderDid         string               `protobuf:"bytes,11,opt,name=holder_did,json=holderDid,proto3" json:"holder_did,omitempty"`                         // 持有者DID
	ProductInfo       *ProductInfo         `protobuf:"bytes,12,opt,name=product_info,json=productInfo,proto3" json:"product_info,omitempty"`                   // 产品信息
	ChainInfo         []*ChainItem         `protobuf:"bytes,13,rep,name=chain_info,json=chainInfo,proto3" json:"chain_info,omitempty"`                         // 上链信息
	CertificationInfo []*CertificationInfo `protobuf:"bytes,14,rep,name=certification_info,json=certificationInfo,proto3" json:"certification_info,omitempty"` // 认证信息
	PlatformId        int32                `protobuf:"varint,15,opt,name=platform_id,json=platformId,proto3" json:"platform_id,omitempty"`                     // 平台id
	PlatformName      string               `protobuf:"bytes,16,opt,name=platform_name,json=platformName,proto3" json:"platform_name,omitempty"`                // 平台中文名
	PlatformEnName    string               `protobuf:"bytes,17,opt,name=platform_en_name,json=platformEnName,proto3" json:"platform_en_name,omitempty"`        // 平台英文名
	EnterpriseName    string               `protobuf:"bytes,18,opt,name=enterprise_name,json=enterpriseName,proto3" json:"enterprise_name,omitempty"`          // 企业名
}

func (x *AssetInfo) Reset() {
	*x = AssetInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mira_ida_access_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetInfo) ProtoMessage() {}

func (x *AssetInfo) ProtoReflect() protoreflect.Message {
	mi := &file_mira_ida_access_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetInfo.ProtoReflect.Descriptor instead.
func (*AssetInfo) Descriptor() ([]byte, []int) {
	return file_mira_ida_access_service_proto_rawDescGZIP(), []int{9}
}

func (x *AssetInfo) GetAssetId() int32 {
	if x != nil {
		return x.AssetId
	}
	return 0
}

func (x *AssetInfo) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *AssetInfo) GetCreatorName() string {
	if x != nil {
		return x.CreatorName
	}
	return ""
}

func (x *AssetInfo) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *AssetInfo) GetUpdateUser() string {
	if x != nil {
		return x.UpdateUser
	}
	return ""
}

func (x *AssetInfo) GetUpdateName() string {
	if x != nil {
		return x.UpdateName
	}
	return ""
}

func (x *AssetInfo) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *AssetInfo) GetHolder() string {
	if x != nil {
		return x.Holder
	}
	return ""
}

func (x *AssetInfo) GetHolderCompany() string {
	if x != nil {
		return x.HolderCompany
	}
	return ""
}

func (x *AssetInfo) GetHolderCreditCode() string {
	if x != nil {
		return x.HolderCreditCode
	}
	return ""
}

func (x *AssetInfo) GetHolderDid() string {
	if x != nil {
		return x.HolderDid
	}
	return ""
}

func (x *AssetInfo) GetProductInfo() *ProductInfo {
	if x != nil {
		return x.ProductInfo
	}
	return nil
}

func (x *AssetInfo) GetChainInfo() []*ChainItem {
	if x != nil {
		return x.ChainInfo
	}
	return nil
}

func (x *AssetInfo) GetCertificationInfo() []*CertificationInfo {
	if x != nil {
		return x.CertificationInfo
	}
	return nil
}

func (x *AssetInfo) GetPlatformId() int32 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

func (x *AssetInfo) GetPlatformName() string {
	if x != nil {
		return x.PlatformName
	}
	return ""
}

func (x *AssetInfo) GetPlatformEnName() string {
	if x != nil {
		return x.PlatformEnName
	}
	return ""
}

func (x *AssetInfo) GetEnterpriseName() string {
	if x != nil {
		return x.EnterpriseName
	}
	return ""
}

type ProductInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductBaseInfo *AssetBaseInfo `protobuf:"bytes,1,opt,name=product_base_info,json=productBaseInfo,proto3" json:"product_base_info,omitempty"` // 产品基础信息
	ProductDataInfo *AssetDataInfo `protobuf:"bytes,2,opt,name=product_data_info,json=productDataInfo,proto3" json:"product_data_info,omitempty"` // 产品数据属性
	ProductDataSet  *DataSetInfo   `protobuf:"bytes,3,opt,name=product_data_set,json=productDataSet,proto3" json:"product_data_set,omitempty"`    // 数据集信息
	ProductApi      *SaveAPIReq    `protobuf:"bytes,4,opt,name=product_api,json=productApi,proto3" json:"product_api,omitempty"`                  // 数据API信息
	ProductImages   []*FileInfo    `protobuf:"bytes,5,rep,name=product_images,json=productImages,proto3" json:"product_images,omitempty"`         // 资产图片
	ProductFiles    []*FileInfo    `protobuf:"bytes,6,rep,name=product_files,json=productFiles,proto3" json:"product_files,omitempty"`            // 产品附件
	ProductStatus   *StatusInfo    `protobuf:"bytes,7,opt,name=product_status,json=productStatus,proto3" json:"product_status,omitempty"`         // 状态信息
	PriceInfo       *PriceInfo     `protobuf:"bytes,8,opt,name=price_info,json=priceInfo,proto3" json:"price_info,omitempty"`
}

func (x *ProductInfo) Reset() {
	*x = ProductInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mira_ida_access_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductInfo) ProtoMessage() {}

func (x *ProductInfo) ProtoReflect() protoreflect.Message {
	mi := &file_mira_ida_access_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductInfo.ProtoReflect.Descriptor instead.
func (*ProductInfo) Descriptor() ([]byte, []int) {
	return file_mira_ida_access_service_proto_rawDescGZIP(), []int{10}
}

func (x *ProductInfo) GetProductBaseInfo() *AssetBaseInfo {
	if x != nil {
		return x.ProductBaseInfo
	}
	return nil
}

func (x *ProductInfo) GetProductDataInfo() *AssetDataInfo {
	if x != nil {
		return x.ProductDataInfo
	}
	return nil
}

func (x *ProductInfo) GetProductDataSet() *DataSetInfo {
	if x != nil {
		return x.ProductDataSet
	}
	return nil
}

func (x *ProductInfo) GetProductApi() *SaveAPIReq {
	if x != nil {
		return x.ProductApi
	}
	return nil
}

func (x *ProductInfo) GetProductImages() []*FileInfo {
	if x != nil {
		return x.ProductImages
	}
	return nil
}

func (x *ProductInfo) GetProductFiles() []*FileInfo {
	if x != nil {
		return x.ProductFiles
	}
	return nil
}

func (x *ProductInfo) GetProductStatus() *StatusInfo {
	if x != nil {
		return x.ProductStatus
	}
	return nil
}

func (x *ProductInfo) GetPriceInfo() *PriceInfo {
	if x != nil {
		return x.PriceInfo
	}
	return nil
}

// 5. 保存API信息接口
type SaveAPIReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId string     `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	AssetId   int32      `protobuf:"varint,2,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"` // 资产id
	Apis      []*APIInfo `protobuf:"bytes,3,rep,name=apis,proto3" json:"apis,omitempty"`                       // API列表
}

func (x *SaveAPIReq) Reset() {
	*x = SaveAPIReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mira_ida_access_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveAPIReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveAPIReq) ProtoMessage() {}

func (x *SaveAPIReq) ProtoReflect() protoreflect.Message {
	mi := &file_mira_ida_access_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveAPIReq.ProtoReflect.Descriptor instead.
func (*SaveAPIReq) Descriptor() ([]byte, []int) {
	return file_mira_ida_access_service_proto_rawDescGZIP(), []int{11}
}

func (x *SaveAPIReq) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *SaveAPIReq) GetAssetId() int32 {
	if x != nil {
		return x.AssetId
	}
	return 0
}

func (x *SaveAPIReq) GetApis() []*APIInfo {
	if x != nil {
		return x.Apis
	}
	return nil
}

// APIInfo 每一条API的信息
type APIInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header       string `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`                                  // header
	Url          string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`                                        // API地址
	TestUrl      string `protobuf:"bytes,3,opt,name=test_url,json=testUrl,proto3" json:"test_url,omitempty"`                 // 测试API地址
	Method       string `protobuf:"bytes,5,opt,name=method,proto3" json:"method,omitempty"`                                  // 请求方式： GET、POST等
	Params       string `protobuf:"bytes,6,opt,name=params,proto3" json:"params,omitempty"`                                  // 入参
	Response     string `protobuf:"bytes,7,opt,name=response,proto3" json:"response,omitempty"`                              // 响应
	RespType     string `protobuf:"bytes,8,opt,name=resp_type,json=respType,proto3" json:"resp_type,omitempty"`              // 响应类型：默认json
	RespExample  string `protobuf:"bytes,9,opt,name=resp_example,json=respExample,proto3" json:"resp_example,omitempty"`     // 响应示例
	CreatedAt    string `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`          // 创建时间
	UpdatedAt    string `protobuf:"bytes,11,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`          // 最后更新时间
	ParamExample string `protobuf:"bytes,12,opt,name=param_example,json=paramExample,proto3" json:"param_example,omitempty"` // 入参示例
	ApiDescribe  string `protobuf:"bytes,13,opt,name=api_describe,json=apiDescribe,proto3" json:"api_describe,omitempty"`    // api描述
}

func (x *APIInfo) Reset() {
	*x = APIInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mira_ida_access_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APIInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIInfo) ProtoMessage() {}

func (x *APIInfo) ProtoReflect() protoreflect.Message {
	mi := &file_mira_ida_access_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIInfo.ProtoReflect.Descriptor instead.
func (*APIInfo) Descriptor() ([]byte, []int) {
	return file_mira_ida_access_service_proto_rawDescGZIP(), []int{12}
}

func (x *APIInfo) GetHeader() string {
	if x != nil {
		return x.Header
	}
	return ""
}

func (x *APIInfo) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *APIInfo) GetTestUrl() string {
	if x != nil {
		return x.TestUrl
	}
	return ""
}

func (x *APIInfo) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *APIInfo) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

func (x *APIInfo) GetResponse() string {
	if x != nil {
		return x.Response
	}
	return ""
}

func (x *APIInfo) GetRespType() string {
	if x != nil {
		return x.RespType
	}
	return ""
}

func (x *APIInfo) GetRespExample() string {
	if x != nil {
		return x.RespExample
	}
	return ""
}

func (x *APIInfo) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *APIInfo) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *APIInfo) GetParamExample() string {
	if x != nil {
		return x.ParamExample
	}
	return ""
}

func (x *APIInfo) GetApiDescribe() string {
	if x != nil {
		return x.ApiDescribe
	}
	return ""
}

type PriceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChargeType int32   `protobuf:"varint,1,opt,name=chargeType,proto3" json:"chargeType,omitempty"` // 收费方式，0：未设置，1：按次收费
	Price      float64 `protobuf:"fixed64,2,opt,name=price,proto3" json:"price,omitempty"`          // 数据价格
	PriceUnit  int32   `protobuf:"varint,3,opt,name=priceUnit,proto3" json:"priceUnit,omitempty"`   // 价格单位，0：未设置，1: 元
}

func (x *PriceInfo) Reset() {
	*x = PriceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mira_ida_access_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PriceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PriceInfo) ProtoMessage() {}

func (x *PriceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_mira_ida_access_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PriceInfo.ProtoReflect.Descriptor instead.
func (*PriceInfo) Descriptor() ([]byte, []int) {
	return file_mira_ida_access_service_proto_rawDescGZIP(), []int{13}
}

func (x *PriceInfo) GetChargeType() int32 {
	if x != nil {
		return x.ChargeType
	}
	return 0
}

func (x *PriceInfo) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *PriceInfo) GetPriceUnit() int32 {
	if x != nil {
		return x.PriceUnit
	}
	return 0
}

type AssetBaseInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetId           int32    `protobuf:"varint,1,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`                                 // 资产自增id
	AssetNumber       string   `protobuf:"bytes,2,opt,name=asset_number,json=assetNumber,proto3" json:"asset_number,omitempty"`                      // 资产编号
	AssetName         string   `protobuf:"bytes,3,opt,name=asset_name,json=assetName,proto3" json:"asset_name,omitempty"`                            // 资产名称
	AssetEnName       string   `protobuf:"bytes,4,opt,name=asset_en_name,json=assetEnName,proto3" json:"asset_en_name,omitempty"`                    // 资产英文简称
	AssetType         int32    `protobuf:"varint,5,opt,name=asset_type,json=assetType,proto3" json:"asset_type,omitempty"`                           // 资产类型
	AssetTypeName     string   `protobuf:"bytes,6,opt,name=asset_type_name,json=assetTypeName,proto3" json:"asset_type_name,omitempty"`              // 资产类型名称
	Tags              []string `protobuf:"bytes,7,rep,name=tags,proto3" json:"tags,omitempty"`                                                       // 关键字
	IndustryId        int32    `protobuf:"varint,8,opt,name=industry_id,json=industryId,proto3" json:"industry_id,omitempty"`                        // 行业id
	Industry          string   `protobuf:"bytes,9,opt,name=industry,proto3" json:"industry,omitempty"`                                               // 行业名称
	Intro             string   `protobuf:"bytes,10,opt,name=intro,proto3" json:"intro,omitempty"`                                                    // 简介
	UserCategory      []int32  `protobuf:"varint,11,rep,packed,name=user_category,json=userCategory,proto3" json:"user_category,omitempty"`          // 使用对象
	UserCategoryName  []string `protobuf:"bytes,12,rep,name=user_category_name,json=userCategoryName,proto3" json:"user_category_name,omitempty"`    // 使用对象名称
	ImmediatelySupply int32    `protobuf:"varint,13,opt,name=immediately_supply,json=immediatelySupply,proto3" json:"immediately_supply,omitempty"`  // 供应方式： 1即时供应，0延时供应
	DelayedSupplyTime string   `protobuf:"bytes,14,opt,name=delayed_supply_time,json=delayedSupplyTime,proto3" json:"delayed_supply_time,omitempty"` // 延时供应时间
	SuitScenario      string   `protobuf:"bytes,15,opt,name=suit_scenario,json=suitScenario,proto3" json:"suit_scenario,omitempty"`                  // 适用场景
	DisableScenario   string   `protobuf:"bytes,16,opt,name=disable_scenario,json=disableScenario,proto3" json:"disable_scenario,omitempty"`         // 禁用场景
	Authorization     int32    `protobuf:"varint,17,opt,name=authorization,proto3" json:"authorization,omitempty"`                                   // 是否精准授权：1是，2否
	VisitMode         int32    `protobuf:"varint,18,opt,name=visit_mode,json=visitMode,proto3" json:"visit_mode,omitempty"`                          // 接口访问模式： 1点对点模式，2适配器模式
	CirculateMode     int32    `protobuf:"varint,19,opt,name=circulate_mode,json=circulateMode,proto3" json:"circulate_mode,omitempty"`              // 流通方式：1 共享，2 交易
}

func (x *AssetBaseInfo) Reset() {
	*x = AssetBaseInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mira_ida_access_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetBaseInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetBaseInfo) ProtoMessage() {}

func (x *AssetBaseInfo) ProtoReflect() protoreflect.Message {
	mi := &file_mira_ida_access_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetBaseInfo.ProtoReflect.Descriptor instead.
func (*AssetBaseInfo) Descriptor() ([]byte, []int) {
	return file_mira_ida_access_service_proto_rawDescGZIP(), []int{14}
}

func (x *AssetBaseInfo) GetAssetId() int32 {
	if x != nil {
		return x.AssetId
	}
	return 0
}

func (x *AssetBaseInfo) GetAssetNumber() string {
	if x != nil {
		return x.AssetNumber
	}
	return ""
}

func (x *AssetBaseInfo) GetAssetName() string {
	if x != nil {
		return x.AssetName
	}
	return ""
}

func (x *AssetBaseInfo) GetAssetEnName() string {
	if x != nil {
		return x.AssetEnName
	}
	return ""
}

func (x *AssetBaseInfo) GetAssetType() int32 {
	if x != nil {
		return x.AssetType
	}
	return 0
}

func (x *AssetBaseInfo) GetAssetTypeName() string {
	if x != nil {
		return x.AssetTypeName
	}
	return ""
}

func (x *AssetBaseInfo) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *AssetBaseInfo) GetIndustryId() int32 {
	if x != nil {
		return x.IndustryId
	}
	return 0
}

func (x *AssetBaseInfo) GetIndustry() string {
	if x != nil {
		return x.Industry
	}
	return ""
}

func (x *AssetBaseInfo) GetIntro() string {
	if x != nil {
		return x.Intro
	}
	return ""
}

func (x *AssetBaseInfo) GetUserCategory() []int32 {
	if x != nil {
		return x.UserCategory
	}
	return nil
}

func (x *AssetBaseInfo) GetUserCategoryName() []string {
	if x != nil {
		return x.UserCategoryName
	}
	return nil
}

func (x *AssetBaseInfo) GetImmediatelySupply() int32 {
	if x != nil {
		return x.ImmediatelySupply
	}
	return 0
}

func (x *AssetBaseInfo) GetDelayedSupplyTime() string {
	if x != nil {
		return x.DelayedSupplyTime
	}
	return ""
}

func (x *AssetBaseInfo) GetSuitScenario() string {
	if x != nil {
		return x.SuitScenario
	}
	return ""
}

func (x *AssetBaseInfo) GetDisableScenario() string {
	if x != nil {
		return x.DisableScenario
	}
	return ""
}

func (x *AssetBaseInfo) GetAuthorization() int32 {
	if x != nil {
		return x.Authorization
	}
	return 0
}

func (x *AssetBaseInfo) GetVisitMode() int32 {
	if x != nil {
		return x.VisitMode
	}
	return 0
}

func (x *AssetBaseInfo) GetCirculateMode() int32 {
	if x != nil {
		return x.CirculateMode
	}
	return 0
}

type AssetDataInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceType         int32  `protobuf:"varint,1,opt,name=source_type,json=sourceType,proto3" json:"source_type,omitempty"`                        // 取得方式
	SourceTypeName     string `protobuf:"bytes,2,opt,name=source_type_name,json=sourceTypeName,proto3" json:"source_type_name,omitempty"`           // 取得方式名称
	SourceWay          string `protobuf:"bytes,3,opt,name=source_way,json=sourceWay,proto3" json:"source_way,omitempty"`                            // 来源渠道
	DesensitizationWay string `protobuf:"bytes,4,opt,name=desensitization_way,json=desensitizationWay,proto3" json:"desensitization_way,omitempty"` // 脱敏方式
	ScaleType          int32  `protobuf:"varint,5,opt,name=scale_type,json=scaleType,proto3" json:"scale_type,omitempty"`                           // 数据规模类型:1条，2M，3G
	ScaleTypeName      string `protobuf:"bytes,6,opt,name=scale_type_name,json=scaleTypeName,proto3" json:"scale_type_name,omitempty"`              // 数据规模类型名称
	Scale              int32  `protobuf:"varint,7,opt,name=scale,proto3" json:"scale,omitempty"`                                                    // 数据规模
	DataFormat         int32  `protobuf:"varint,8,opt,name=data_format,json=dataFormat,proto3" json:"data_format,omitempty"`                        // 存储格式
	DataFormatName     string `protobuf:"bytes,9,opt,name=data_format_name,json=dataFormatName,proto3" json:"data_format_name,omitempty"`           // 存储格式名称
	UpdateType         int32  `protobuf:"varint,10,opt,name=update_type,json=updateType,proto3" json:"update_type,omitempty"`                       // 更新周期类型：1静态，2实时，3周期
	Cycle              int32  `protobuf:"varint,12,opt,name=cycle,proto3" json:"cycle,omitempty"`                                                   // 更新周期
	Unit               int32  `protobuf:"varint,13,opt,name=unit,proto3" json:"unit,omitempty"`                                                     // 更新周期单位: 1分，2时，3天
	UnitName           string `protobuf:"bytes,14,opt,name=unit_name,json=unitName,proto3" json:"unit_name,omitempty"`                              // 更新周期单位名称
	TimeSpan           string `protobuf:"bytes,15,opt,name=time_span,json=timeSpan,proto3" json:"time_span,omitempty"`                              // 时间跨度
	DataSample         string `protobuf:"bytes,16,opt,name=data_sample,json=dataSample,proto3" json:"data_sample,omitempty"`                        // 数据产品示例
	CustomInfo         string `protobuf:"bytes,17,opt,name=custom_info,json=customInfo,proto3" json:"custom_info,omitempty"`                        // 个性化字段
	ExpireTime         string `protobuf:"bytes,18,opt,name=expire_time,json=expireTime,proto3" json:"expire_time,omitempty"`                        // 资产失效时间
}

func (x *AssetDataInfo) Reset() {
	*x = AssetDataInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mira_ida_access_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetDataInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetDataInfo) ProtoMessage() {}

func (x *AssetDataInfo) ProtoReflect() protoreflect.Message {
	mi := &file_mira_ida_access_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetDataInfo.ProtoReflect.Descriptor instead.
func (*AssetDataInfo) Descriptor() ([]byte, []int) {
	return file_mira_ida_access_service_proto_rawDescGZIP(), []int{15}
}

func (x *AssetDataInfo) GetSourceType() int32 {
	if x != nil {
		return x.SourceType
	}
	return 0
}

func (x *AssetDataInfo) GetSourceTypeName() string {
	if x != nil {
		return x.SourceTypeName
	}
	return ""
}

func (x *AssetDataInfo) GetSourceWay() string {
	if x != nil {
		return x.SourceWay
	}
	return ""
}

func (x *AssetDataInfo) GetDesensitizationWay() string {
	if x != nil {
		return x.DesensitizationWay
	}
	return ""
}

func (x *AssetDataInfo) GetScaleType() int32 {
	if x != nil {
		return x.ScaleType
	}
	return 0
}

func (x *AssetDataInfo) GetScaleTypeName() string {
	if x != nil {
		return x.ScaleTypeName
	}
	return ""
}

func (x *AssetDataInfo) GetScale() int32 {
	if x != nil {
		return x.Scale
	}
	return 0
}

func (x *AssetDataInfo) GetDataFormat() int32 {
	if x != nil {
		return x.DataFormat
	}
	return 0
}

func (x *AssetDataInfo) GetDataFormatName() string {
	if x != nil {
		return x.DataFormatName
	}
	return ""
}

func (x *AssetDataInfo) GetUpdateType() int32 {
	if x != nil {
		return x.UpdateType
	}
	return 0
}

func (x *AssetDataInfo) GetCycle() int32 {
	if x != nil {
		return x.Cycle
	}
	return 0
}

func (x *AssetDataInfo) GetUnit() int32 {
	if x != nil {
		return x.Unit
	}
	return 0
}

func (x *AssetDataInfo) GetUnitName() string {
	if x != nil {
		return x.UnitName
	}
	return ""
}

func (x *AssetDataInfo) GetTimeSpan() string {
	if x != nil {
		return x.TimeSpan
	}
	return ""
}

func (x *AssetDataInfo) GetDataSample() string {
	if x != nil {
		return x.DataSample
	}
	return ""
}

func (x *AssetDataInfo) GetCustomInfo() string {
	if x != nil {
		return x.CustomInfo
	}
	return ""
}

func (x *AssetDataInfo) GetExpireTime() string {
	if x != nil {
		return x.ExpireTime
	}
	return ""
}

type StatusInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OnChainStatus       int32 `protobuf:"varint,1,opt,name=onChainStatus,proto3" json:"onChainStatus,omitempty"`             // 上链状态：0未上链，1已上链，2上链失败
	CertificationStatus int32 `protobuf:"varint,2,opt,name=certificationStatus,proto3" json:"certificationStatus,omitempty"` // 认证状态： 0待认证，1认证中，2认证完成
	Status              int32 `protobuf:"varint,3,opt,name=Status,proto3" json:"Status,omitempty"`                           // 资产状态： 待定
	ProfStatus          int32 `protobuf:"varint,4,opt,name=profStatus,proto3" json:"profStatus,omitempty"`                   // 合规认证状态：0 未认证，1认证中，2认证完成， 3 认证失败
	ValuationStatus     int32 `protobuf:"varint,5,opt,name=valuationStatus,proto3" json:"valuationStatus,omitempty"`         // 价值评估认证状态：0 未认证，1认证中，2认证完成， 3 认证失败
}

func (x *StatusInfo) Reset() {
	*x = StatusInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mira_ida_access_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusInfo) ProtoMessage() {}

func (x *StatusInfo) ProtoReflect() protoreflect.Message {
	mi := &file_mira_ida_access_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusInfo.ProtoReflect.Descriptor instead.
func (*StatusInfo) Descriptor() ([]byte, []int) {
	return file_mira_ida_access_service_proto_rawDescGZIP(), []int{16}
}

func (x *StatusInfo) GetOnChainStatus() int32 {
	if x != nil {
		return x.OnChainStatus
	}
	return 0
}

func (x *StatusInfo) GetCertificationStatus() int32 {
	if x != nil {
		return x.CertificationStatus
	}
	return 0
}

func (x *StatusInfo) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *StatusInfo) GetProfStatus() int32 {
	if x != nil {
		return x.ProfStatus
	}
	return 0
}

func (x *StatusInfo) GetValuationStatus() int32 {
	if x != nil {
		return x.ValuationStatus
	}
	return 0
}

type DataSetInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableName  string                 `protobuf:"bytes,1,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`      // 表名
	TableDesc  string                 `protobuf:"bytes,2,opt,name=table_desc,json=tableDesc,proto3" json:"table_desc,omitempty"`      // 表描述
	DbConnInfo *DBConnInfo            `protobuf:"bytes,3,opt,name=db_conn_info,json=dbConnInfo,proto3" json:"db_conn_info,omitempty"` // 数据源连接信息
	Items      []*SaveTableColumnItem `protobuf:"bytes,4,rep,name=items,proto3" json:"items,omitempty"`                               // 字段列表
}

func (x *DataSetInfo) Reset() {
	*x = DataSetInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mira_ida_access_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataSetInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataSetInfo) ProtoMessage() {}

func (x *DataSetInfo) ProtoReflect() protoreflect.Message {
	mi := &file_mira_ida_access_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataSetInfo.ProtoReflect.Descriptor instead.
func (*DataSetInfo) Descriptor() ([]byte, []int) {
	return file_mira_ida_access_service_proto_rawDescGZIP(), []int{17}
}

func (x *DataSetInfo) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *DataSetInfo) GetTableDesc() string {
	if x != nil {
		return x.TableDesc
	}
	return ""
}

func (x *DataSetInfo) GetDbConnInfo() *DBConnInfo {
	if x != nil {
		return x.DbConnInfo
	}
	return nil
}

func (x *DataSetInfo) GetItems() []*SaveTableColumnItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type FileInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetId int32  `protobuf:"varint,1,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"` // 资产id
	Type    int32  `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`                      // 资产附件类型：1图片，2合规证明材料，3. 估值证明材料，4相关附件
	Name    string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`                       // 文件名称
	FileUrl string `protobuf:"bytes,4,opt,name=file_url,json=fileUrl,proto3" json:"file_url,omitempty"`  // 文件URL
}

func (x *FileInfo) Reset() {
	*x = FileInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mira_ida_access_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileInfo) ProtoMessage() {}

func (x *FileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_mira_ida_access_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileInfo.ProtoReflect.Descriptor instead.
func (*FileInfo) Descriptor() ([]byte, []int) {
	return file_mira_ida_access_service_proto_rawDescGZIP(), []int{18}
}

func (x *FileInfo) GetAssetId() int32 {
	if x != nil {
		return x.AssetId
	}
	return 0
}

func (x *FileInfo) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *FileInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FileInfo) GetFileUrl() string {
	if x != nil {
		return x.FileUrl
	}
	return ""
}

type ChainItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainId       string        `protobuf:"bytes,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`                   // 链id
	SubChainId    string        `protobuf:"bytes,2,opt,name=sub_chain_id,json=subChainId,proto3" json:"sub_chain_id,omitempty"`        // sub链id
	ChainName     string        `protobuf:"bytes,3,opt,name=chain_name,json=chainName,proto3" json:"chain_name,omitempty"`             // 链名称
	ExplorerUrl   string        `protobuf:"bytes,4,opt,name=explorer_url,json=explorerUrl,proto3" json:"explorer_url,omitempty"`       // 区块浏览器地址
	UploadItems   []*UploadInfo `protobuf:"bytes,5,rep,name=upload_items,json=uploadItems,proto3" json:"upload_items,omitempty"`       //上链信息
	ChainInfoId   int32         `protobuf:"varint,6,opt,name=chain_info_id,json=chainInfoId,proto3" json:"chain_info_id,omitempty"`    // 链信息id
	KeyInfoId     int32         `protobuf:"varint,7,opt,name=key_info_id,json=keyInfoId,proto3" json:"key_info_id,omitempty"`          // 上链时的用户身份id
	UploadAddress string        `protobuf:"bytes,8,opt,name=upload_address,json=uploadAddress,proto3" json:"upload_address,omitempty"` // 上链时的用户地址
}

func (x *ChainItem) Reset() {
	*x = ChainItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mira_ida_access_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChainItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChainItem) ProtoMessage() {}

func (x *ChainItem) ProtoReflect() protoreflect.Message {
	mi := &file_mira_ida_access_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChainItem.ProtoReflect.Descriptor instead.
func (*ChainItem) Descriptor() ([]byte, []int) {
	return file_mira_ida_access_service_proto_rawDescGZIP(), []int{19}
}

func (x *ChainItem) GetChainId() string {
	if x != nil {
		return x.ChainId
	}
	return ""
}

func (x *ChainItem) GetSubChainId() string {
	if x != nil {
		return x.SubChainId
	}
	return ""
}

func (x *ChainItem) GetChainName() string {
	if x != nil {
		return x.ChainName
	}
	return ""
}

func (x *ChainItem) GetExplorerUrl() string {
	if x != nil {
		return x.ExplorerUrl
	}
	return ""
}

func (x *ChainItem) GetUploadItems() []*UploadInfo {
	if x != nil {
		return x.UploadItems
	}
	return nil
}

func (x *ChainItem) GetChainInfoId() int32 {
	if x != nil {
		return x.ChainInfoId
	}
	return 0
}

func (x *ChainItem) GetKeyInfoId() int32 {
	if x != nil {
		return x.KeyInfoId
	}
	return 0
}

func (x *ChainItem) GetUploadAddress() string {
	if x != nil {
		return x.UploadAddress
	}
	return ""
}

type UploadInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxId                string   `protobuf:"bytes,1,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`                                                // 交易id
	VisibleType         int32    `protobuf:"varint,2,opt,name=visible_type,json=visibleType,proto3" json:"visible_type,omitempty"`                          // 可见范围： 0 不公开，1部分公开，2全部公开
	VisiblePlatform     []int32  `protobuf:"varint,3,rep,packed,name=visible_platform,json=visiblePlatform,proto3" json:"visible_platform,omitempty"`       // 部分公开时，公开的的平台id
	VisiblePlatformName []string `protobuf:"bytes,4,rep,name=visible_platform_name,json=visiblePlatformName,proto3" json:"visible_platform_name,omitempty"` // 部分公开时，公开的的平台名称
	UploadedAt          string   `protobuf:"bytes,5,opt,name=uploaded_at,json=uploadedAt,proto3" json:"uploaded_at,omitempty"`                              // 上链时间
}

func (x *UploadInfo) Reset() {
	*x = UploadInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mira_ida_access_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadInfo) ProtoMessage() {}

func (x *UploadInfo) ProtoReflect() protoreflect.Message {
	mi := &file_mira_ida_access_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadInfo.ProtoReflect.Descriptor instead.
func (*UploadInfo) Descriptor() ([]byte, []int) {
	return file_mira_ida_access_service_proto_rawDescGZIP(), []int{20}
}

func (x *UploadInfo) GetTxId() string {
	if x != nil {
		return x.TxId
	}
	return ""
}

func (x *UploadInfo) GetVisibleType() int32 {
	if x != nil {
		return x.VisibleType
	}
	return 0
}

func (x *UploadInfo) GetVisiblePlatform() []int32 {
	if x != nil {
		return x.VisiblePlatform
	}
	return nil
}

func (x *UploadInfo) GetVisiblePlatformName() []string {
	if x != nil {
		return x.VisiblePlatformName
	}
	return nil
}

func (x *UploadInfo) GetUploadedAt() string {
	if x != nil {
		return x.UploadedAt
	}
	return ""
}

type CertificationInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CertificateAt        string      `protobuf:"bytes,1,opt,name=certificate_at,json=certificateAt,proto3" json:"certificate_at,omitempty"`                        // 认证时间
	EnterpriseName       string      `protobuf:"bytes,2,opt,name=enterprise_name,json=enterpriseName,proto3" json:"enterprise_name,omitempty"`                     // 认证机构名称
	EnterpriseCreditCode string      `protobuf:"bytes,3,opt,name=enterprise_credit_code,json=enterpriseCreditCode,proto3" json:"enterprise_credit_code,omitempty"` // 企业信用证代码
	EnterpriseType       int32       `protobuf:"varint,4,opt,name=enterprise_type,json=enterpriseType,proto3" json:"enterprise_type,omitempty"`                    // 认证类型：0 合规，1 资产评估
	EnterpriseAddress    string      `protobuf:"bytes,5,opt,name=enterprise_address,json=enterpriseAddress,proto3" json:"enterprise_address,omitempty"`            // 链账户地址
	Result               int32       `protobuf:"varint,6,opt,name=result,proto3" json:"result,omitempty"`                                                          // 认证结果： 1通过，2驳回
	TxId                 string      `protobuf:"bytes,7,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`                                                   // 交易id
	Explains             string      `protobuf:"bytes,8,opt,name=explains,proto3" json:"explains,omitempty"`                                                       // 驳回原因
	ExpireTime           string      `protobuf:"bytes,9,opt,name=expire_time,json=expireTime,proto3" json:"expire_time,omitempty"`                                 // 认证到期日
	FileInfo             []*FileInfo `protobuf:"bytes,10,rep,name=file_info,json=fileInfo,proto3" json:"file_info,omitempty"`                                      // 认证文件
	ChainInfoId          int32       `protobuf:"varint,11,opt,name=chain_info_id,json=chainInfoId,proto3" json:"chain_info_id,omitempty"`                          // 链信息id
	ChainId              string      `protobuf:"bytes,12,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`                                         // 链id
	ChainName            string      `protobuf:"bytes,13,opt,name=chain_name,json=chainName,proto3" json:"chain_name,omitempty"`                                   // 链名称
}

func (x *CertificationInfo) Reset() {
	*x = CertificationInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mira_ida_access_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CertificationInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CertificationInfo) ProtoMessage() {}

func (x *CertificationInfo) ProtoReflect() protoreflect.Message {
	mi := &file_mira_ida_access_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CertificationInfo.ProtoReflect.Descriptor instead.
func (*CertificationInfo) Descriptor() ([]byte, []int) {
	return file_mira_ida_access_service_proto_rawDescGZIP(), []int{21}
}

func (x *CertificationInfo) GetCertificateAt() string {
	if x != nil {
		return x.CertificateAt
	}
	return ""
}

func (x *CertificationInfo) GetEnterpriseName() string {
	if x != nil {
		return x.EnterpriseName
	}
	return ""
}

func (x *CertificationInfo) GetEnterpriseCreditCode() string {
	if x != nil {
		return x.EnterpriseCreditCode
	}
	return ""
}

func (x *CertificationInfo) GetEnterpriseType() int32 {
	if x != nil {
		return x.EnterpriseType
	}
	return 0
}

func (x *CertificationInfo) GetEnterpriseAddress() string {
	if x != nil {
		return x.EnterpriseAddress
	}
	return ""
}

func (x *CertificationInfo) GetResult() int32 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *CertificationInfo) GetTxId() string {
	if x != nil {
		return x.TxId
	}
	return ""
}

func (x *CertificationInfo) GetExplains() string {
	if x != nil {
		return x.Explains
	}
	return ""
}

func (x *CertificationInfo) GetExpireTime() string {
	if x != nil {
		return x.ExpireTime
	}
	return ""
}

func (x *CertificationInfo) GetFileInfo() []*FileInfo {
	if x != nil {
		return x.FileInfo
	}
	return nil
}

func (x *CertificationInfo) GetChainInfoId() int32 {
	if x != nil {
		return x.ChainInfoId
	}
	return 0
}

func (x *CertificationInfo) GetChainId() string {
	if x != nil {
		return x.ChainId
	}
	return ""
}

func (x *CertificationInfo) GetChainName() string {
	if x != nil {
		return x.ChainName
	}
	return ""
}

type DBConnInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DbConnId    int32  `protobuf:"varint,1,opt,name=db_conn_id,json=dbConnId,proto3" json:"db_conn_id,omitempty"`          // 数据源连接ID
	ConnName    string `protobuf:"bytes,2,opt,name=conn_name,json=connName,proto3" json:"conn_name,omitempty"`             // 数据源连接名称
	Host        string `protobuf:"bytes,3,opt,name=host,proto3" json:"host,omitempty"`                                     // 数据源地址
	Port        int32  `protobuf:"varint,4,opt,name=port,proto3" json:"port,omitempty"`                                    // 端口号
	Type        int32  `protobuf:"varint,5,opt,name=type,proto3" json:"type,omitempty"`                                    // 数据库类型： 1.mysql，2.kingbase
	Username    string `protobuf:"bytes,6,opt,name=username,proto3" json:"username,omitempty"`                             // 数据库用户名
	DbName      string `protobuf:"bytes,7,opt,name=db_name,json=dbName,proto3" json:"db_name,omitempty"`                   // 数据库名称
	TlsCert     string `protobuf:"bytes,9,opt,name=tls_cert,json=tlsCert,proto3" json:"tls_cert,omitempty"`                // TLS证书
	TlsCertName string `protobuf:"bytes,10,opt,name=tls_cert_name,json=tlsCertName,proto3" json:"tls_cert_name,omitempty"` // TLS文件名
	TlsCertExt  string `protobuf:"bytes,11,opt,name=tls_cert_ext,json=tlsCertExt,proto3" json:"tls_cert_ext,omitempty"`    // TLS文件名扩展
	CreatedAt   string `protobuf:"bytes,12,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`         // 创建时间
	Creator     string `protobuf:"bytes,13,opt,name=creator,proto3" json:"creator,omitempty"`                              // 创建人
}

func (x *DBConnInfo) Reset() {
	*x = DBConnInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mira_ida_access_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBConnInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBConnInfo) ProtoMessage() {}

func (x *DBConnInfo) ProtoReflect() protoreflect.Message {
	mi := &file_mira_ida_access_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBConnInfo.ProtoReflect.Descriptor instead.
func (*DBConnInfo) Descriptor() ([]byte, []int) {
	return file_mira_ida_access_service_proto_rawDescGZIP(), []int{22}
}

func (x *DBConnInfo) GetDbConnId() int32 {
	if x != nil {
		return x.DbConnId
	}
	return 0
}

func (x *DBConnInfo) GetConnName() string {
	if x != nil {
		return x.ConnName
	}
	return ""
}

func (x *DBConnInfo) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *DBConnInfo) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *DBConnInfo) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *DBConnInfo) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *DBConnInfo) GetDbName() string {
	if x != nil {
		return x.DbName
	}
	return ""
}

func (x *DBConnInfo) GetTlsCert() string {
	if x != nil {
		return x.TlsCert
	}
	return ""
}

func (x *DBConnInfo) GetTlsCertName() string {
	if x != nil {
		return x.TlsCertName
	}
	return ""
}

func (x *DBConnInfo) GetTlsCertExt() string {
	if x != nil {
		return x.TlsCertExt
	}
	return ""
}

func (x *DBConnInfo) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *DBConnInfo) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

type SaveTableColumnItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                                          // 字段名称
	OriginalName  string `protobuf:"bytes,2,opt,name=original_name,json=originalName,proto3" json:"original_name,omitempty"`      // 原始字段名称
	DataType      string `protobuf:"bytes,3,opt,name=data_type,json=dataType,proto3" json:"data_type,omitempty"`                  // 字段类型
	DataLength    int32  `protobuf:"varint,4,opt,name=data_length,json=dataLength,proto3" json:"data_length,omitempty"`           // 字段类型
	IsPrimaryKey  int32  `protobuf:"varint,5,opt,name=is_primary_key,json=isPrimaryKey,proto3" json:"is_primary_key,omitempty"`   // 是否为主键：1.是，0.否
	IsNotNull     int32  `protobuf:"varint,6,opt,name=is_not_null,json=isNotNull,proto3" json:"is_not_null,omitempty"`            // 是否为空：1.是，0.否
	PrivacyQuery  int32  `protobuf:"varint,7,opt,name=privacy_query,json=privacyQuery,proto3" json:"privacy_query,omitempty"`     // 是否隐私查询：1是，0否 默认1
	Description   string `protobuf:"bytes,8,opt,name=description,proto3" json:"description,omitempty"`                            // 字段描述
	DataExample   string `protobuf:"bytes,9,opt,name=data_example,json=dataExample,proto3" json:"data_example,omitempty"`         // 数据示例
	CustomColumn  string `protobuf:"bytes,10,opt,name=custom_column,json=customColumn,proto3" json:"custom_column,omitempty"`     // 个性化字段
	SecurityLevel int32  `protobuf:"varint,11,opt,name=security_level,json=securityLevel,proto3" json:"security_level,omitempty"` // 分级分类:1 一级，2二级，3三级
}

func (x *SaveTableColumnItem) Reset() {
	*x = SaveTableColumnItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mira_ida_access_service_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveTableColumnItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveTableColumnItem) ProtoMessage() {}

func (x *SaveTableColumnItem) ProtoReflect() protoreflect.Message {
	mi := &file_mira_ida_access_service_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveTableColumnItem.ProtoReflect.Descriptor instead.
func (*SaveTableColumnItem) Descriptor() ([]byte, []int) {
	return file_mira_ida_access_service_proto_rawDescGZIP(), []int{23}
}

func (x *SaveTableColumnItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SaveTableColumnItem) GetOriginalName() string {
	if x != nil {
		return x.OriginalName
	}
	return ""
}

func (x *SaveTableColumnItem) GetDataType() string {
	if x != nil {
		return x.DataType
	}
	return ""
}

func (x *SaveTableColumnItem) GetDataLength() int32 {
	if x != nil {
		return x.DataLength
	}
	return 0
}

func (x *SaveTableColumnItem) GetIsPrimaryKey() int32 {
	if x != nil {
		return x.IsPrimaryKey
	}
	return 0
}

func (x *SaveTableColumnItem) GetIsNotNull() int32 {
	if x != nil {
		return x.IsNotNull
	}
	return 0
}

func (x *SaveTableColumnItem) GetPrivacyQuery() int32 {
	if x != nil {
		return x.PrivacyQuery
	}
	return 0
}

func (x *SaveTableColumnItem) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SaveTableColumnItem) GetDataExample() string {
	if x != nil {
		return x.DataExample
	}
	return ""
}

func (x *SaveTableColumnItem) GetCustomColumn() string {
	if x != nil {
		return x.CustomColumn
	}
	return ""
}

func (x *SaveTableColumnItem) GetSecurityLevel() int32 {
	if x != nil {
		return x.SecurityLevel
	}
	return 0
}

// ///////////////////////////
// //// asset info end  //////
// ///////////////////////////
type GetPrivateKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PubKey  string `protobuf:"bytes,1,opt,name=pubKey,proto3" json:"pubKey,omitempty"`
	KeyId   string `protobuf:"bytes,2,opt,name=keyId,proto3" json:"keyId,omitempty"`
	IsLocal bool   `protobuf:"varint,3,opt,name=isLocal,proto3" json:"isLocal,omitempty"`
}

func (x *GetPrivateKeyRequest) Reset() {
	*x = GetPrivateKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mira_ida_access_service_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPrivateKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPrivateKeyRequest) ProtoMessage() {}

func (x *GetPrivateKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mira_ida_access_service_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPrivateKeyRequest.ProtoReflect.Descriptor instead.
func (*GetPrivateKeyRequest) Descriptor() ([]byte, []int) {
	return file_mira_ida_access_service_proto_rawDescGZIP(), []int{24}
}

func (x *GetPrivateKeyRequest) GetPubKey() string {
	if x != nil {
		return x.PubKey
	}
	return ""
}

func (x *GetPrivateKeyRequest) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

func (x *GetPrivateKeyRequest) GetIsLocal() bool {
	if x != nil {
		return x.IsLocal
	}
	return false
}

type GetSkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 业务返回码，0 表示执行成功，非 0 表示执行失败
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 执行信息，主要是失败的报错提示信息
	Msg string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Sk  string `protobuf:"bytes,3,opt,name=sk,proto3" json:"sk,omitempty"`
}

func (x *GetSkResponse) Reset() {
	*x = GetSkResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mira_ida_access_service_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSkResponse) ProtoMessage() {}

func (x *GetSkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mira_ida_access_service_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSkResponse.ProtoReflect.Descriptor instead.
func (*GetSkResponse) Descriptor() ([]byte, []int) {
	return file_mira_ida_access_service_proto_rawDescGZIP(), []int{25}
}

func (x *GetSkResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetSkResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetSkResponse) GetSk() string {
	if x != nil {
		return x.Sk
	}
	return ""
}

var File_mira_ida_access_service_proto protoreflect.FileDescriptor

var file_mira_ida_access_service_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x6d, 0x69, 0x72, 0x61, 0x5f, 0x69, 0x64, 0x61, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa2, 0x01, 0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x07, 0x6b, 0x76,
	0x50, 0x61, 0x69, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x50, 0x61, 0x69, 0x72,
	0x52, 0x07, 0x6b, 0x76, 0x50, 0x61, 0x69, 0x72, 0x73, 0x12, 0x17, 0x0a, 0x04, 0x74, 0x78, 0x49,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x74, 0x78, 0x49, 0x64, 0x88,
	0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x74, 0x78, 0x49, 0x64, 0x22, 0x36, 0x0a, 0x0c, 0x4b,
	0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x50, 0x61, 0x69, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x74, 0x0a, 0x10, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x3a, 0x0a,
	0x0d, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x68, 0x61,
	0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x43, 0x68, 0x61, 0x69,
	0x6e, 0x44, 0x61, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x87, 0x01, 0x0a, 0x0d, 0x43, 0x68,
	0x61, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x13, 0x0a, 0x05, 0x74, 0x78, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x78, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x78, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x74, 0x78, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x26, 0x0a, 0x0f, 0x74,
	0x78, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x74, 0x78, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x22, 0x56, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x44, 0x42, 0x43, 0x6f, 0x6e, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x1d,
	0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x0a, 0x64, 0x62, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x64, 0x62, 0x43, 0x6f, 0x6e, 0x6e, 0x49, 0x64, 0x22, 0x6e, 0x0a, 0x18, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x44, 0x42, 0x43, 0x6f, 0x6e, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x2c, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x44, 0x42, 0x43, 0x6f, 0x6e,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x95, 0x02, 0x0a, 0x11,
	0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x44, 0x42, 0x43, 0x6f, 0x6e, 0x6e, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x1c, 0x0a, 0x0a, 0x64, 0x62, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x62, 0x43, 0x6f, 0x6e, 0x6e, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x68, 0x6f, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x70, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x64, 0x62, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x64, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6c, 0x73,
	0x5f, 0x63, 0x65, 0x72, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6c, 0x73,
	0x43, 0x65, 0x72, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x22, 0xa8, 0x01, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x45, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x65,
	0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x45, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x22, 0x6d,
	0x0a, 0x1f, 0x47, 0x65, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x45, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x24, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xb8, 0x05,
	0x0a, 0x09, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72,
	0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x68, 0x6f,
	0x6c, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x12, 0x2c, 0x0a, 0x12, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x72, 0x65, 0x64,
	0x69, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x68,
	0x6f, 0x6c, 0x64, 0x65, 0x72, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x64, 0x69, 0x64, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x44, 0x69, 0x64, 0x12, 0x35,
	0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2f, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x09, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x47, 0x0a, 0x12, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0e, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x65, 0x72, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x11, 0x63, 0x65,
	0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x1f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64,
	0x12, 0x23, 0x0a, 0x0d, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x5f, 0x65, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x45, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x27, 0x0a, 0x0f, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70,
	0x72, 0x69, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xdc, 0x03, 0x0a, 0x0b, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x40, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x40, 0x0a, 0x11, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3c, 0x0a, 0x10,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x65, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x53, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x74, 0x12, 0x32, 0x0a, 0x0b, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x41, 0x50, 0x49, 0x52,
	0x65, 0x71, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x70, 0x69, 0x12, 0x36,
	0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46,
	0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x0e,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2f, 0x0a, 0x0a, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x6a, 0x0a, 0x0a, 0x53, 0x61, 0x76, 0x65, 0x41,
	0x50, 0x49, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12,
	0x22, 0x0a, 0x04, 0x61, 0x70, 0x69, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x50, 0x49, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x61,
	0x70, 0x69, 0x73, 0x22, 0xe0, 0x02, 0x0a, 0x07, 0x41, 0x50, 0x49, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x16, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x65, 0x73,
	0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x65, 0x73,
	0x74, 0x55, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x73, 0x70, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x23,
	0x0a, 0x0d, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x45, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x70, 0x69, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x70, 0x69, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x22, 0x5f, 0x0a, 0x09, 0x50, 0x72, 0x69, 0x63, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x22, 0xac, 0x05, 0x0a, 0x0d, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f,
	0x65, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x45, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x61, 0x73, 0x73, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x69, 0x6e, 0x64, 0x75,
	0x73, 0x74, 0x72, 0x79, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x64, 0x75, 0x73, 0x74,
	0x72, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x64, 0x75, 0x73, 0x74,
	0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x12, 0x23, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x0c, 0x75, 0x73, 0x65, 0x72, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x2c, 0x0a,
	0x12, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x75, 0x73, 0x65, 0x72, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x69,
	0x6d, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x65, 0x6c, 0x79, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6c,
	0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x69, 0x6d, 0x6d, 0x65, 0x64, 0x69, 0x61,
	0x74, 0x65, 0x6c, 0x79, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x2e, 0x0a, 0x13, 0x64, 0x65,
	0x6c, 0x61, 0x79, 0x65, 0x64, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x65, 0x64,
	0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x75,
	0x69, 0x74, 0x5f, 0x73, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x73, 0x75, 0x69, 0x74, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x12,
	0x29, 0x0a, 0x10, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x63, 0x65, 0x6e, 0x61,
	0x72, 0x69, 0x6f, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x69, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x76, 0x69, 0x73, 0x69, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x12,
	0x25, 0x0a, 0x0e, 0x63, 0x69, 0x72, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x6f, 0x64,
	0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x63, 0x69, 0x72, 0x63, 0x75, 0x6c, 0x61,
	0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0xba, 0x04, 0x0a, 0x0d, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x77, 0x61,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x57,
	0x61, 0x79, 0x12, 0x2f, 0x0a, 0x13, 0x64, 0x65, 0x73, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x61, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x12, 0x64, 0x65, 0x73, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x57, 0x61, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x63, 0x61,
	0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63,
	0x61, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x63, 0x61, 0x6c, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x46, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x12, 0x28, 0x0a, 0x10, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x61, 0x74,
	0x61, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x79, 0x63, 0x6c, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x79, 0x63,
	0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x6e, 0x69, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x70, 0x61, 0x6e,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x70, 0x61, 0x6e,
	0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x53, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x22, 0xc6, 0x01, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x24, 0x0a, 0x0d, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x6f, 0x6e, 0x43, 0x68, 0x61,
	0x69, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x30, 0x0a, 0x13, 0x63, 0x65, 0x72, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x66, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x66, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x76, 0x61, 0x6c,
	0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xb2, 0x01, 0x0a,
	0x0b, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x65, 0x73, 0x63, 0x12, 0x33, 0x0a, 0x0c, 0x64, 0x62,
	0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x42, 0x43, 0x6f, 0x6e, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x64, 0x62, 0x43, 0x6f, 0x6e, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x30, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x22, 0x68, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a,
	0x08, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x55, 0x72, 0x6c, 0x22, 0xab, 0x02, 0x0a, 0x09,
	0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x5f, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x43,
	0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x78, 0x70, 0x6c, 0x6f, 0x72, 0x65,
	0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x78, 0x70,
	0x6c, 0x6f, 0x72, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x34, 0x0a, 0x0c, 0x75, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0b, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x22,
	0x0a, 0x0d, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x69, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0b, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x69,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6b, 0x65, 0x79, 0x49, 0x6e, 0x66, 0x6f,
	0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x75, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xc4, 0x01, 0x0a, 0x0a, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x13, 0x0a, 0x05, 0x74, 0x78, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x78, 0x49, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0b, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x29, 0x0a, 0x10, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x5f, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0f, 0x76, 0x69, 0x73, 0x69,
	0x62, 0x6c, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x32, 0x0a, 0x15, 0x76,
	0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x76, 0x69, 0x73, 0x69,
	0x62, 0x6c, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x41, 0x74,
	0x22, 0xe7, 0x03, 0x0a, 0x11, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x27, 0x0a,
	0x0f, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69,
	0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70,
	0x72, 0x69, 0x73, 0x65, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69,
	0x73, 0x65, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x27, 0x0a, 0x0f,
	0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72,
	0x69, 0x73, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x11, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x13, 0x0a, 0x05,
	0x74, 0x78, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x78, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x73, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x73, 0x12, 0x1f, 0x0a,
	0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2c,
	0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22, 0x0a, 0x0d,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xd2, 0x02, 0x0a, 0x0a, 0x44,
	0x42, 0x43, 0x6f, 0x6e, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x0a, 0x64, 0x62, 0x5f,
	0x63, 0x6f, 0x6e, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64,
	0x62, 0x43, 0x6f, 0x6e, 0x6e, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x6e, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x64, 0x62, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64,
	0x62, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6c, 0x73, 0x5f, 0x63, 0x65, 0x72,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6c, 0x73, 0x43, 0x65, 0x72, 0x74,
	0x12, 0x22, 0x0a, 0x0d, 0x74, 0x6c, 0x73, 0x5f, 0x63, 0x65, 0x72, 0x74, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x6c, 0x73, 0x43, 0x65, 0x72, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x74, 0x6c, 0x73, 0x5f, 0x63, 0x65, 0x72, 0x74,
	0x5f, 0x65, 0x78, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x6c, 0x73, 0x43,
	0x65, 0x72, 0x74, 0x45, 0x78, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x22,
	0x88, 0x03, 0x0a, 0x13, 0x53, 0x61, 0x76, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x24,
	0x0a, 0x0e, 0x69, 0x73, 0x5f, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x6b, 0x65, 0x79,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x69, 0x73, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72,
	0x79, 0x4b, 0x65, 0x79, 0x12, 0x1e, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x6e, 0x6f, 0x74, 0x5f, 0x6e,
	0x75, 0x6c, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x73, 0x4e, 0x6f, 0x74,
	0x4e, 0x75, 0x6c, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x5f,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x70, 0x72, 0x69,
	0x76, 0x61, 0x63, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x43, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x73, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x5e, 0x0a, 0x14, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x70, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x6b, 0x65,
	0x79, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x69, 0x73, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x22, 0x45, 0x0a, 0x0d, 0x47, 0x65,
	0x74, 0x53, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x12, 0x0e, 0x0a, 0x02, 0x73, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x73,
	0x6b, 0x32, 0xa4, 0x03, 0x0a, 0x0d, 0x4d, 0x69, 0x72, 0x61, 0x49, 0x64, 0x61, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x57, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x44, 0x42, 0x43, 0x6f, 0x6e, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x44, 0x42,
	0x43, 0x6f, 0x6e, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x44, 0x42,
	0x43, 0x6f, 0x6e, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x6c, 0x0a, 0x1b,
	0x47, 0x65, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x42, 0x79, 0x45, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x45, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79,
	0x45, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x10, 0x53, 0x65,
	0x74, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x61, 0x72, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x40, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x53, 0x6b, 0x46, 0x72, 0x6f, 0x6d, 0x50, 0x6b,
	0x12, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53, 0x6b, 0x46, 0x72, 0x6f, 0x6d,
	0x4b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x07, 0x5a, 0x05, 0x2e, 0x2f, 0x69, 0x64,
	0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_mira_ida_access_service_proto_rawDescOnce sync.Once
	file_mira_ida_access_service_proto_rawDescData = file_mira_ida_access_service_proto_rawDesc
)

func file_mira_ida_access_service_proto_rawDescGZIP() []byte {
	file_mira_ida_access_service_proto_rawDescOnce.Do(func() {
		file_mira_ida_access_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_mira_ida_access_service_proto_rawDescData)
	})
	return file_mira_ida_access_service_proto_rawDescData
}

var file_mira_ida_access_service_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_mira_ida_access_service_proto_goTypes = []any{
	(*ContractRequest)(nil),                 // 0: proto.ContractRequest
	(*KeyValuePair)(nil),                    // 1: proto.KeyValuePair
	(*ContractResponse)(nil),                // 2: proto.ContractResponse
	(*ChainDataInfo)(nil),                   // 3: proto.ChainDataInfo
	(*GetPrivateDBConnInfoReq)(nil),         // 4: proto.GetPrivateDBConnInfoReq
	(*GetPrivateDBConnInfoResp)(nil),        // 5: proto.GetPrivateDBConnInfoResp
	(*PrivateDBConnInfo)(nil),               // 6: proto.PrivateDBConnInfo
	(*GetPrivateAssetInfoByEnNameReq)(nil),  // 7: proto.GetPrivateAssetInfoByEnNameReq
	(*GetPrivateAssetInfoByEnNameResp)(nil), // 8: proto.GetPrivateAssetInfoByEnNameResp
	(*AssetInfo)(nil),                       // 9: proto.AssetInfo
	(*ProductInfo)(nil),                     // 10: proto.ProductInfo
	(*SaveAPIReq)(nil),                      // 11: proto.SaveAPIReq
	(*APIInfo)(nil),                         // 12: proto.APIInfo
	(*PriceInfo)(nil),                       // 13: proto.PriceInfo
	(*AssetBaseInfo)(nil),                   // 14: proto.AssetBaseInfo
	(*AssetDataInfo)(nil),                   // 15: proto.AssetDataInfo
	(*StatusInfo)(nil),                      // 16: proto.StatusInfo
	(*DataSetInfo)(nil),                     // 17: proto.DataSetInfo
	(*FileInfo)(nil),                        // 18: proto.FileInfo
	(*ChainItem)(nil),                       // 19: proto.ChainItem
	(*UploadInfo)(nil),                      // 20: proto.UploadInfo
	(*CertificationInfo)(nil),               // 21: proto.CertificationInfo
	(*DBConnInfo)(nil),                      // 22: proto.DBConnInfo
	(*SaveTableColumnItem)(nil),             // 23: proto.SaveTableColumnItem
	(*GetPrivateKeyRequest)(nil),            // 24: proto.GetPrivateKeyRequest
	(*GetSkResponse)(nil),                   // 25: proto.GetSkResponse
}
var file_mira_ida_access_service_proto_depIdxs = []int32{
	1,  // 0: proto.ContractRequest.kvPairs:type_name -> proto.KeyValuePair
	3,  // 1: proto.ContractResponse.ChainDataInfo:type_name -> proto.ChainDataInfo
	6,  // 2: proto.GetPrivateDBConnInfoResp.data:type_name -> proto.PrivateDBConnInfo
	9,  // 3: proto.GetPrivateAssetInfoByEnNameResp.data:type_name -> proto.AssetInfo
	10, // 4: proto.AssetInfo.product_info:type_name -> proto.ProductInfo
	19, // 5: proto.AssetInfo.chain_info:type_name -> proto.ChainItem
	21, // 6: proto.AssetInfo.certification_info:type_name -> proto.CertificationInfo
	14, // 7: proto.ProductInfo.product_base_info:type_name -> proto.AssetBaseInfo
	15, // 8: proto.ProductInfo.product_data_info:type_name -> proto.AssetDataInfo
	17, // 9: proto.ProductInfo.product_data_set:type_name -> proto.DataSetInfo
	11, // 10: proto.ProductInfo.product_api:type_name -> proto.SaveAPIReq
	18, // 11: proto.ProductInfo.product_images:type_name -> proto.FileInfo
	18, // 12: proto.ProductInfo.product_files:type_name -> proto.FileInfo
	16, // 13: proto.ProductInfo.product_status:type_name -> proto.StatusInfo
	13, // 14: proto.ProductInfo.price_info:type_name -> proto.PriceInfo
	12, // 15: proto.SaveAPIReq.apis:type_name -> proto.APIInfo
	22, // 16: proto.DataSetInfo.db_conn_info:type_name -> proto.DBConnInfo
	23, // 17: proto.DataSetInfo.items:type_name -> proto.SaveTableColumnItem
	20, // 18: proto.ChainItem.upload_items:type_name -> proto.UploadInfo
	18, // 19: proto.CertificationInfo.file_info:type_name -> proto.FileInfo
	4,  // 20: proto.MiraIdaAccess.GetPrivateDBConnInfo:input_type -> proto.GetPrivateDBConnInfoReq
	7,  // 21: proto.MiraIdaAccess.GetPrivateAssetInfoByEnName:input_type -> proto.GetPrivateAssetInfoByEnNameReq
	0,  // 22: proto.MiraIdaAccess.SetTaskPartyInfo:input_type -> proto.ContractRequest
	24, // 23: proto.MiraIdaAccess.GetSkFromPk:input_type -> proto.GetPrivateKeyRequest
	24, // 24: proto.MiraIdaAccess.GetSkFromKeyId:input_type -> proto.GetPrivateKeyRequest
	5,  // 25: proto.MiraIdaAccess.GetPrivateDBConnInfo:output_type -> proto.GetPrivateDBConnInfoResp
	8,  // 26: proto.MiraIdaAccess.GetPrivateAssetInfoByEnName:output_type -> proto.GetPrivateAssetInfoByEnNameResp
	2,  // 27: proto.MiraIdaAccess.SetTaskPartyInfo:output_type -> proto.ContractResponse
	25, // 28: proto.MiraIdaAccess.GetSkFromPk:output_type -> proto.GetSkResponse
	25, // 29: proto.MiraIdaAccess.GetSkFromKeyId:output_type -> proto.GetSkResponse
	25, // [25:30] is the sub-list for method output_type
	20, // [20:25] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_mira_ida_access_service_proto_init() }
func file_mira_ida_access_service_proto_init() {
	if File_mira_ida_access_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_mira_ida_access_service_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*ContractRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mira_ida_access_service_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*KeyValuePair); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mira_ida_access_service_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ContractResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mira_ida_access_service_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*ChainDataInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mira_ida_access_service_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*GetPrivateDBConnInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mira_ida_access_service_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*GetPrivateDBConnInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mira_ida_access_service_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*PrivateDBConnInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mira_ida_access_service_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*GetPrivateAssetInfoByEnNameReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mira_ida_access_service_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*GetPrivateAssetInfoByEnNameResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mira_ida_access_service_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*AssetInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mira_ida_access_service_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*ProductInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mira_ida_access_service_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*SaveAPIReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mira_ida_access_service_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*APIInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mira_ida_access_service_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*PriceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mira_ida_access_service_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*AssetBaseInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mira_ida_access_service_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*AssetDataInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mira_ida_access_service_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*StatusInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mira_ida_access_service_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*DataSetInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mira_ida_access_service_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*FileInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mira_ida_access_service_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*ChainItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mira_ida_access_service_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*UploadInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mira_ida_access_service_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*CertificationInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mira_ida_access_service_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*DBConnInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mira_ida_access_service_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*SaveTableColumnItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mira_ida_access_service_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*GetPrivateKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mira_ida_access_service_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*GetSkResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_mira_ida_access_service_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mira_ida_access_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_mira_ida_access_service_proto_goTypes,
		DependencyIndexes: file_mira_ida_access_service_proto_depIdxs,
		MessageInfos:      file_mira_ida_access_service_proto_msgTypes,
	}.Build()
	File_mira_ida_access_service_proto = out.File
	file_mira_ida_access_service_proto_rawDesc = nil
	file_mira_ida_access_service_proto_goTypes = nil
	file_mira_ida_access_service_proto_depIdxs = nil
}
